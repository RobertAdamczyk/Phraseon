#!/bin/sh
echo "Synchronizing Phrase Localizations"

# ============================
# Configuration Section Start
# ============================

# Project Credentials
ACCESS_TOKEN='ACCESS_TOKEN_VALUE'
PROJECT_ID='PROJECT_ID_VALUE'

# Define the relative path to your files from the script location
RELATIVE_PATH="/YOUR_PATH/TO_LOCALIZATIONS"

# ==========================
# Configuration Section End
# ==========================

BASE_DIR="$(dirname "$0")$RELATIVE_PATH"

# Check if Network is available
echo "Checking Network connectivity..."
if ping -q -c 1 -W 1 us-central1-FIREBASE_PROJECT_ID.cloudfunctions.net >/dev/null; then
  echo "Network available; downloading localizations"
else
  echo "Network unavailable; skipping synchronization"
  exit 0
fi

# Get the data from project
echo "Getting Data from Firebase Function..."
RESPONSE=$(curl -s -H "x-access-key: ${ACCESS_TOKEN}" "https://us-central1-FIREBASE_PROJECT_ID.cloudfunctions.net//getKeys?projectId=${PROJECT_ID}")

# Check if the response is empty
if [ -z "$RESPONSE" ]; then
  echo "No data received or an error occurred."
  exit 1
fi

# Remove existing translation files in each language directory
find "$BASE_DIR" -name 'Localizable.strings' -exec rm {} \;

# Extract and save each language's translations to a separate file
echo "Extracting and saving translations..."
echo "$RESPONSE" | jq -r 'to_entries[] | .key as $key | .value | to_entries[] | "\($key) \(.key) \(.value)"' | while read -r id lang text; do

  # Remove quotes from the beginning and end of the text
  text="${text%\"}"
  text="${text#\"}"

  # Create language directory if it does not exist
  DIRECTORY="$BASE_DIR/$lang.lproj"
  mkdir -p "$DIRECTORY"

  # Create or update the file for the given language
  echo "\"$id\" = \"$text\";" >> "$DIRECTORY/Localizable.strings"
done

echo "Localization files created in $BASE_DIR."
